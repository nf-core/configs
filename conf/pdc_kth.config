// Nextflow config for use with PDC at KTH

def cluster = "unknown"

try {
    cluster = ['/bin/bash', '-c', 'sacctmgr show cluster -n | grep -o "^\s*[^ ]*\s*"'].execute().text.trim()
} catch (java.io.IOException e) {
    System.err.println("WARNING: Could not run scluster, defaulting to unknown")
}

params {
  config_profile_description = 'PDC profile.'
  config_profile_contact = 'Pontus Freyhult (@pontus)'
  config_profile_url = "https://www.pdc.kth.se/"

  max_memory = 1790.GB
  max_cpus = 256
  max_time = 7.d

  schema_ignore_params = "genomes,input_paths,cluster-options,clusterOptions,project,validationSchemaIgnoreParams"
  validationSchemaIgnoreParams = "genomes,input_paths,cluster-options,clusterOptions,project,schema_ignore_params"
}


def containerOptionsCreator = {
  switch(cluster) {
    case "dardel":
      return '-B /cfs/klemming/'
   }

   return ''
}

def clusterOptionsCreator = { mem,time ->
  String base = "-A $params.project ${params.clusterOptions ?: ''}"

  switch(cluster) {
    case "dardel":
      String extra = ''

      if (mem <= 222.GB) {
        if (time<24.d) {
          extra += ' -p shared'
        } else {
          extra += ' -p long'
        }
      } else {
        // Needs more than a thin node
	// make an ugly hack to ignore runtime
      	extra += ' -p main,memory -t 1-0:0'
      }
      
      return base+extra
   }

   return base
}


singularity {
  enabled = true
  containerOptions = containerOptionsCreator
}

process {
  // Should we lock these to specific versions?
  beforeScript = 'module load PDC singularity'

  executor = 'slurm'
  clusterOptions = { clusterOptionsCreator(task.memory, task.time) }
}

