process {
    withName:'CAT_FASTQ' {
        memory = { check_max( 500.MB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 1
    }
    withName:'CUSTOM_DUMPSOFTWAREVERSIONS' {
        memory = { check_max( 30.MB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 1
    }
    withName:'SAMPLESHEET_CHECK' {
        memory = { check_max( 30.MB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 1
    }
    withName:'MULTIQC' {
        memory = { check_max( 1.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 2
    }
    withName:'SAMTOOLS_VIEW_FOR_ARRIBA' {
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 1
    }
    withName:'SAMTOOLS_VIEW_FOR_STARFUSION' {
        memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 1
    }
    withName:'SAMTOOLS_INDEX_FOR_STARFUSION' {
        memory = { check_max( 500.MB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 2
    }
    withName:'SAMTOOLS_INDEX_FOR_ARRIBA' {
        memory = { check_max( 500.MB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 2
    }
    withName:'ARRIBA_VISUALISATION' {
        memory = { check_max( 12.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 1
    }
    withName:'ARRIBA' {
        memory = { check_max( 36.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h  * task.attempt, 'time'    ) }
        cpus = 6
    }
    withName:'FUSIONREPORT' {
        memory = { check_max( 500.MB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 2
    }
    withName:'GATK4_MARKDUPLICATES' {
        memory = { check_max( 65.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 6.h  * task.attempt, 'time'    ) }
        cpus = 6
    }
    withName:'GATK4_MARKDUPLICATES' {
        clusterOptions = { "-A $params.priority ${params.clusterOptions ?: ''} ${task.memory ? "--mem ${task.memory.mega * 1.15 as long}M" : ''}" }
    }
    withName:'PICARD_COLLECTRNASEQMETRICS' {
        memory = { check_max( 30.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 6.h  * task.attempt, 'time'    ) }
        cpus = 2
    }
    withName:'PICARD_COLLECTRNASEQMETRICS' {
        clusterOptions = { "-A $params.priority ${params.clusterOptions ?: ''} ${task.memory ? "--mem ${task.memory.mega * 1.15 as long}M" : ''}" }
    }
    withName:'PICARD_COLLECTINSERTSIZEMETRICS' {
        memory = { check_max( 30.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 6.h  * task.attempt, 'time'    ) }
        cpus = 2
    }
    withName:'PICARD_COLLECTINSERTSIZEMETRICS' {
        clusterOptions = { "-A $params.priority ${params.clusterOptions ?: ''} ${task.memory ? "--mem ${task.memory.mega * 1.15 as long}M" : ''}" }
    }
    withName:'FASTQC_FOR_FASTP' {
        memory = { check_max( 4.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 2
    }
    withName:'FASTQC' {
        memory = { check_max( 4.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 2
    }
    withName:'SAMTOOLS_SORT_FOR_ARRIBA' {
        memory = { check_max( 8.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        cpus = 6
    }
    withName:'FASTP' {
        memory = { check_max( 4.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 8.h  * task.attempt, 'time'    ) }
        cpus = 6
    }
    withName:'FUSIONINSPECTOR' {
        memory = { check_max( 40.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 24.h  * task.attempt, 'time'    ) }
        cpus = 12
    }
    withName:'FUSIONCATCHER' {
        memory = { check_max( 72.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 24.h  * task.attempt, 'time'    ) }
        cpus = 12
    }
    withName:'STAR_FOR_STARFUSION' {
        memory = { check_max( 50.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        cpus = 12
    }
    withName:'STAR_FOR_ARRIBA' {
        memory = { check_max( 40.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 16.h  * task.attempt, 'time'    ) }
        cpus = 12
    }
    withName:'STARFUSION' {
        memory = { check_max( 40.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 24.h  * task.attempt, 'time'    ) }
        cpus = 12
    }
    withName:'AGAT_CONVERTSPGFF2TSV' {
        memory = { check_max( 1.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 1
    }
    withName:'VCF_COLLECT' {
        memory = { check_max( 1.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 4.h  * task.attempt, 'time'    ) }
        cpus = 2
    }
}
